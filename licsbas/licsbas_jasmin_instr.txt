### Guidance on running LiCSBAS on JASMIN using slurm ###

### Jessica Payne 15/03/23 ###

LiCSBAS is a great tool written by Yu Morishita for calculating line-of-sight InSAR velocity
time-series and fields using LiCS interferograms from the LiCS Portal:
https://github.com/yumorishita/LiCSBAS

Milan Lazecky has modified the tool to run as part of the wider set of LiCS commands on JASMIN.

The below instructions assume you know how to run LiCSBAS step by step in terminal on a server
other than JASMIN. These instructions walk through running steps using slurm and jobs, and mention
batch processing.

1) Before you can process on JASMIN, you'll need an account and permissions. A guide for
acquiring these can be found at:
https://gitlab.com/comet_licsar/licsar_documentation/-/wikis/home

2) You will also need to be a member of:
comet_lics (group workspace)
nceo_geohazards (group workspace)
nceo_lics (group workspace)
hpxfer (additional service)
... on JASMIN

3) Familiarise yourself with the slurm processing system:
https://help.jasmin.ac.uk/category/4889-slurm

4) Set up JASMIN fingerprints etc. Would recommend doing this on holly or other server rather than locally.
Log into JASMIN via:
a) exec ssh-agent $SHELL
b) ssh-add ~/.ssh/id_rsa_jasmin
c) ssh -X -A eejap002@login1.jasmin.ac.uk

5) Log into a sci server. Avoid 3 and 6, e.g.:
ssh -X -A eejap002@sci.jasmin.ac.uk

6) Get LiCS commands up and running:
a) Add to your ~/.bashrc file the line:
module use "/gws/smf/j04/nceo_geohazards/software/Modules/"
a) Run:
module load licsar_framebatch_testing/testing
b) Run
source /gws/smf/j04/nceo_geohazards/software/mambalics/load_mambalics.rc
... you will now have access to licsar_framebatch codes (and many other codes created by Milan and Yasser to do all things LiCS).
... see https://comet-licsar.github.io/index.html# and https://gitlab.com/comet_licsar for more info.

7) Only run LiCSBAS on JASMIN using jobs. You can run in command line on other servers e.g. holly, hal, hex, foe-linux,
but here you should use the job system that JASMIN relies on.

8) E.g. to run step 13 of LiCSBAS in your $frame directory:
a) Create a shell script containing the command of LiCSBAS you want to run e.g.:

###
#!/usr/bin/bash

LiCSBAS13_sb_inv.py -d GEOCml10GACOS/ --mem_size 8192 --n_para 4
###

b) Create directory sbatch_logs in your $frame directory.

c) Then, in command line type:
sbatch -A comet -p comet -o sbatch_logs/$frame.licsbas13.out -e sbatch_logs/$frame.licsbas13.err -t 5:00:00 --mem=16536 --ntasks 1 --cpus-per-task 4 ./step_13.sh

NOTE: It is very important to change --mem to a number that will allow your job to complete. For step 13, --mem should equal
patch_size * cores * 2
Here: 8192 * 4 * 2 = 16536

9) You will mainly want to set multiple LiCSBAS steps to run one after another in a batch process.
To do this use batch_LiCSBAS.sh from https://github.com/yumorishita/LiCSBAS

I have success running the batch_LiCSBAS.sh script on JASMIN with a command such as:
sbatch -A comet -p comet -o batch_LiCSBAS.out -e batch_LiCSBAS.err -t 10:00:00 --mem=13000 --ntasks 1 --cpus-per-task 4 ./batch_LiCSBAS.sh

a) Again, run this as a job similar to the one in 8c. You may have to play around with --mem sizes depending 
on your desired resolution and processing area size.




